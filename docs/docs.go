// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Ruslan",
            "email": "rkuserbaev@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/banner-{bannerId}": {
            "put": {
                "description": "And its all",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Adds 1 show counter",
                "operationId": "increment-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "bannerId",
                        "name": "bannerId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/banners": {
            "get": {
                "description": "Get ordered list of banners",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get ordered list of banners",
                "operationId": "get-by-page",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Banner"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update banner by UUID id in http param",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update Banner by ID",
                "operationId": "put-banner-by-id",
                "parameters": [
                    {
                        "description": "bannerInput",
                        "name": "banner",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.BannerUpdateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create new banner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create banner",
                "operationId": "create-banner",
                "parameters": [
                    {
                        "description": "bannerInput",
                        "name": "banner",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.BannerCreateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.SuccessResponse"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v1.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/banners/banner-{bannerId}": {
            "get": {
                "description": "Get banner by UUID id in http param",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Banner by ID",
                "operationId": "get-banner-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bannerId",
                        "name": "bannerId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Banner"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/banners/images/upload": {
            "post": {
                "description": "multipart form data, i dont know how to pass it to Params",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Hand file from browser",
                "operationId": "upload-image",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.ImageUploadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/banners/random": {
            "get": {
                "description": "Get random banner from database",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get random banner",
                "operationId": "get-banner-random",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "hour",
                        "name": "hour",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Banner"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/banners/randoms": {
            "get": {
                "description": "Get random banners from database",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get random banners with limit",
                "operationId": "get-banner-randoms",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "hour",
                        "name": "hour",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Banner"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/banners/{bannerId}": {
            "delete": {
                "description": "Delete banner by id",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete banner",
                "operationId": "delete-banner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bannerId",
                        "name": "bannerId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Banner": {
            "type": "object",
            "properties": {
                "alt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_uri": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "raw_html": {
                    "type": "string"
                },
                "show_count": {
                    "type": "integer"
                },
                "show_count_cap": {
                    "type": "integer"
                },
                "show_count_per_guest": {
                    "type": "integer"
                },
                "show_end_date": {
                    "type": "string"
                },
                "show_hour_end": {
                    "type": "integer"
                },
                "show_hour_start": {
                    "type": "integer"
                },
                "show_start_date": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "visible": {
                    "type": "boolean"
                }
            }
        },
        "service.BannerCreateInput": {
            "type": "object",
            "properties": {
                "alt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_uri": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "raw_html": {
                    "type": "string"
                },
                "show_count": {
                    "type": "integer"
                },
                "show_count_cap": {
                    "type": "integer"
                },
                "show_count_per_guest": {
                    "type": "integer"
                },
                "show_end_date": {
                    "type": "string"
                },
                "show_hour_end": {
                    "type": "integer"
                },
                "show_hour_start": {
                    "type": "integer"
                },
                "show_start_date": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "visible": {
                    "type": "boolean"
                }
            }
        },
        "service.BannerUpdateInput": {
            "type": "object",
            "properties": {
                "alt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_uri": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "raw_html": {
                    "type": "string"
                },
                "show_count": {
                    "type": "integer"
                },
                "show_count_cap": {
                    "type": "integer"
                },
                "show_count_per_guest": {
                    "type": "integer"
                },
                "show_end_date": {
                    "type": "string"
                },
                "show_hour_end": {
                    "type": "integer"
                },
                "show_hour_start": {
                    "type": "integer"
                },
                "show_start_date": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "visible": {
                    "type": "boolean"
                }
            }
        },
        "v1.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "v1.ImageUploadResponse": {
            "type": "object",
            "properties": {
                "image_uri": {
                    "type": "string"
                }
            }
        },
        "v1.SuccessResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:5000",
	BasePath:    "/v1",
	Schemes:     []string{},
	Title:       "Banner roulette backend",
	Description: "This is a sample server celler server.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
